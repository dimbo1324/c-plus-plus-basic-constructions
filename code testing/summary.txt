---------------------------------------
---------------------------------------
Теория и основные понятия
---------------------------------------
---------------------------------------

---------------------------------------
1. Тестирование программного обеспечения
---------------------------------------
Тестирование ПО — процесс проверки соответствия поведения программы ожиданиям разработчика. Оно включает:
1.1 Функциональное тестирование: проверка корректности алгоритмов и логики.
1.2 Нефункциональное тестирование: производительность, безопасность, надёжность.

---------------------------------------
2. Модульное (Unit) тестирование
---------------------------------------
Модульные тесты проверяют небольшие «единицы» кода (функции, классы) в изоляции:
2.1 Тестовый фреймворк (Google Test, Catch2, Doctest) автоматизирует запуск, регистрацию и отчёты по тестам.
2.2 Тестовый «стэндалон»: ожидаемый результат, сравниваемый с реальным.
2.3 Тестовые двойники (stubs, mocks) при необходимости заменяют внешние зависимости.

---------------------------------------
3. Покрытие кода
---------------------------------------
3.1 Statement Coverage: процент выполненных операторов.
3.2 Branch Coverage: процент выполненных ветвлений (true/false).
3.3 Path Coverage: комбинации ветвлений (обычно слишком дорого для полного охвата).

---------------------------------------
4. Специальные виды тестирования в C++20+
---------------------------------------
4.1 Compile-time tests с помощью static_assert и consteval (C++20) позволяют проверять условия при компиляции.
4.2 Concepts (requires-выражения) используются для ограничения типов и получаются схожие эффекты с compile-time assertions.

---------------------------------------
5. TDD (Test-Driven Development)
---------------------------------------
Подход, при котором тесты пишутся до реализации функционала. Это гарантирует, что:
5.1 Каждый разработанный кусок кода сразу покрыт тестами.
5.2 Код остаётся модульным и тестируемым.

Примеры тестов, 3 распространенных случаев лежат в mian_1.cpp, main_2.cpp, main_3.cpp.